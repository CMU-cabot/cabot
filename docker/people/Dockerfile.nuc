# Copyright (c) 2021  IBM Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

ARG FROM_IMAGE
FROM $FROM_IMAGE

ARG ROS_DISTRO=noetic \
    UBUNTU_DISTRO=focal \
    GAZEBOV=11 \
    TZ="Etc/UTC" \

ENV ROS_DISTRO=$ROS_DISTRO \
    CMAKE_V=3.19.3 \
    OPEN3D_VERSION=0.15.1 \
    OPENCV_V=4.6.0 \
    TZ=$TZ

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt update && \
	apt install -y --no-install-recommends \
	git \
	libarmadillo-dev \
        libglu1-mesa-dev \
        libfreetype6-dev \
	libc++-dev \
	ros-$ROS_DISTRO-diagnostic-updater \
	ros-$ROS_DISTRO-tf2-geometry-msgs \
        libfreetype6-dev \
        libglu1-mesa-dev \
	python-tk \
	python3 \
	python3-dev \
	python3-pip \
	python-tk \
	python3-vcstool \
#	qt5-default \
	rsync \
	software-properties-common \
	unzip \
	usbutils \
	wget \
	xorg-dev \
	xterm \
	&& \
	apt clean && \
	rm -rf /var/lib/apt/lists/*

RUN pip3 install --no-cache-dir \
	matplotlib \
	scipy \
	filterpy \
	pyyaml


# install open3d for c++
RUN cd /tmp && \
	wget https://github.com/isl-org/Open3D/releases/download/v${OPEN3D_VERSION}/open3d-devel-linux-x86_64-cxx11-abi-${OPEN3D_VERSION}.tar.xz && \
	tar xf open3d-devel-linux-x86_64-cxx11-abi-${OPEN3D_VERSION}.tar.xz && \
	cp -r open3d-devel-linux-x86_64-cxx11-abi-${OPEN3D_VERSION}/* /usr/local && \
	rm -rf *

# TODO: remove open3d python
# install python open3d
RUN apt update && \
	apt install -y --no-install-recommends \
	&& \
	apt clean && \
	rm -rf /var/lib/apt/lists/* && \
	pip3 install --no-cache-dir open3d

# install cmake
RUN wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_V}/cmake-${CMAKE_V}-linux-x86_64.sh && \
    sh cmake-${CMAKE_V}-linux-x86_64.sh --skip-license --prefix=/usr && \
    rm cmake-${CMAKE_V}-linux-x86_64.sh

# install opencv
RUN mkdir -p src/opencv/build && cd src/opencv && \
	wget https://github.com/opencv/opencv/archive/refs/tags/${OPENCV_V}.zip && \
	unzip ${OPENCV_V}.zip && rm ${OPENCV_V}.zip && \
	wget https://github.com/opencv/opencv_contrib/archive/refs/tags/${OPENCV_V}.zip && \
	unzip ${OPENCV_V}.zip && rm ${OPENCV_V}.zip && \
	cd build && \
	cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D INSTALL_PYTHON_EXAMPLES=OFF \
	-D INSTALL_C_EXAMPLES=OFF \
	-D WITH_TBB=ON \
	-D WITH_CUDA=OFF \
	-D WITH_CUDNN=OFF \
	-D OPENCV_DNN_CUDA=OFF \
	-D BUILD_opencv_cudacodec=OFF \
	-D ENABLE_FAST_MATH=1 \
	-D CUDA_FAST_MATH=0 \
	-D WITH_CUBLAS=0 \
	-D WITH_V4L=ON \
	-D WITH_QT=ON \
	-D WITH_OPENGL=ON \
	-D WITH_GSTREAMER=ON \
	-D WITH_FFMPEG=ON \
	-D OPENCV_GENERATE_PKGCONFIG=ON \
	-D OPENCV_PC_FILE_NAME=opencv4.pc \
	-D OPENCV_ENABLE_NONFREE=OFF \
	-D OPENCV_EXTRA_MODULES_PATH=../opencv_contrib-${OPENCV_V}/modules \
	-D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
	-D BUILD_EXAMPLES=OFF \
	../opencv-${OPENCV_V} && \
	make -j$(nproc) && \
	make install && \
	ldconfig && \
	cd ../../ && \
	rm -rf opencv

# TODO merge
RUN apt update && \
	apt install -y --no-install-recommends \
	ros-$ROS_DISTRO-tf-transformations \
	&& \
	apt clean && \
	rm -rf /var/lib/apt/lists/*
RUN pip3 install --no-cache-dir \
        transforms3d

COPY ./launch.nuc.sh ./launch.sh

# setup for display
ENV USERNAME developer

### replace 1000 with your user/group id
ARG UID=1000
RUN useradd -m $USERNAME && \
        echo "$USERNAME:$USERNAME" | chpasswd && \
        usermod --shell /bin/bash $USERNAME && \
        usermod -aG sudo $USERNAME && \
        mkdir -p /etc/sudoers.d/ && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME && \
        usermod  --uid $UID $USERNAME && \
        groupmod --gid $UID $USERNAME

USER $USERNAME

ENV HOME /home/$USERNAME
WORKDIR $HOME/people_nuc_ws
