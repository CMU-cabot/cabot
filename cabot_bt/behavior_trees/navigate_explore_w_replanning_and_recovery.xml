<!--
 Copyright (c) 2023  Carnegie Mellon University, IBM Corporation, and others

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
-->

<root main_tree_to_execute="MainTree">
  <BehaviorTree ID="MainTree">
    <Sequence>
      <SetBlackboard output_key="first_time" value="true"/>

      <!-- compute a path -->
      <RecoveryNode number_of_retries="999999999" name="InitialComputePathRepeat">
        <Sequence name="ComputePathSequence">
          <!-- clear costmap -->
          <ClearEntireCostmap name="ClearGlobalCostmap-context" server_timeout="5000"
            service_name="/global_costmap/clear_entirely_global_costmap"/>

          <WaitFloat wait_duration_float="0.5"/>
          <CurrentPose global_frame="map" robot_base_frame="base_footprint" pose="{current_pose}" />
          <ComputePathToPose start="{current_pose}" goal="{goal}" path="{explore_path}" planner_id="NavCog"/>
          <PathToPoses path="{explore_path}" goals="{explore_goals}" />
          <PublishTopicPath topic="path_out" value="{explore_path}"/> <!-- debug -->
          <ComputePathThroughPoses goals="{explore_goals}" path="{path}" planner_id="GridBased"/>
          <!-- do not remove this plan topic, this is used by ROS1 node -->
          <PublishTopicPath topic="plan" value="{path}"/>
        </Sequence>
        <ForceSuccess>
          <WaitFloat wait_duration_float="0.5"/>
        </ForceSuccess>
      </RecoveryNode>

      <!-- main loop -->
      <RecoveryNode number_of_retries="999999999" name="NavigateRecovery">
        <PipelineSequence name="NavigateWithReplanning">
          <RateController hz="0.333">
            <Fallback>
              <BlackboardCheckString value_A="{first_time}" value_B="false">
                <Fallback>
                  <Sequence>
                    <!-- replan path only when goal is updated -->
                    <CabotGoalUpdated/>
                    <RecoveryNode number_of_retries="1" name="ComputePath">
                      <Sequence>
                        <CurrentPose global_frame="map" robot_base_frame="base_footprint" pose="{current_pose}" />
                        <ComputePathToPose start="{current_pose}" goal="{goal}" path="{explore_path}" planner_id="NavCog"/>
                        <PathToPoses path="{explore_path}" goals="{explore_goals}" />
                        <PublishTopicPath topic="path_out" value="{explore_path}"/> <!-- debug -->
                        <ComputePathThroughPoses goals="{explore_goals}" path="{path}" planner_id="GridBased"/>
                        <!-- do not remove this plan topic, this is used by ROS1 node -->
                        <PublishTopicPath topic="plan" value="{path}"/>
                      </Sequence>
                      <ReactiveFallback name="ComputePathThroughPosesRecoveryFallback">
                        <GoalUpdated/>
                        <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
                      </ReactiveFallback>
                    </RecoveryNode>
                  </Sequence>
                  <AlwaysSuccess/>
                </Fallback>
              </BlackboardCheckString>
              <SetBlackboard output_key="first_time" value="false"/>
            </Fallback>
          </RateController>
          <RecoveryNode number_of_retries="1" name="FollowPath">
            <FollowPath path="{path}" controller_id="FollowPath" goal_checker_id="cabot_goal_checker"/>
            <ReactiveFallback name="FollowPathRecoveryFallback">
              <GoalUpdated/>
              <ClearEntireCostmap name="ClearLocalCostmap-Context" service_name="local_costmap/clear_entirely_local_costmap"/>
            </ReactiveFallback>
          </RecoveryNode>
        </PipelineSequence>
        <!-- if follow path is aborted, compute path and try again -->
        <RecoveryNode number_of_retries="999999999" name="RecoveryComputePathRepeat">
          <Sequence name="ComputePathSequence">
            <!-- clear costmap -->
            <ClearCostmapAroundRobot name="ClearGlobalCostmapAroundRobot2" server_timeout="5000"
              service_name="global_costmap/clear_around_global_costmap"
              reset_distance="20" />
            <ClearCostmapAroundRobot name="ClearLocalCostmapAroundRobot" server_timeout="5000"
              service_name="local_costmap/clear_around_local_costmap"
              reset_distance="20" />
            <!-- wait long enough to include neighbor obstacles -->
            <Wait wait_duration="1.0"/>
          </Sequence>
          <AlwaysSuccess/>
        </RecoveryNode>
      </RecoveryNode>
    </Sequence>
  </BehaviorTree>
</root>