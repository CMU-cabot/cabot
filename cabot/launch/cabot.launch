<!--
 Copyright 2020 Carnegie Mellon University

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
-->

<launch>
  <arg name="offset" default="0"/>
  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find cabot_description)/robots/cabot_zed_hokuyo.urdf.xacro' offset:=$(arg offset)" />
  <param name="robot_description" command="$(arg urdf_file)" />

  <!-- important generally, but specifically utilised by the current app manager -->  
  <param name="robot/name" value="$(optenv ROBOT cabot)"/>
  <param name="robot/type" value="cabot"/>
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="5.0" />
  </node>
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
    <rosparam command="load" file="$(find turtlebot_bringup)/param/kobuki/diagnostics.yaml" />
  </node>

  <group ns="cabot">
    <include file="$(find cabot)/launch/cabot_core.launch"/>
    
    <node pkg="cabot" type="cabot_mobile_base.py" name="cabot_mobile_base" output="screen" ns="cabot">
      <!-- for robot move -->
      <param name="cmd_vel_topic" value="/navigation_velocity_smoother/raw_cmd_vel"/>
      <param name="motor_topic" value="/cabot/motor_speed" />
      
      <param name="voltage_topic" value="/cabot/voltage" />

      <!-- for odometer -->
      <param name="encoder1_topic" value="/cabot/encoder1" />
      <param name="encoder2_topic" value="/cabot/encoder2" />
      <param name="odom_topic" value="/cabot/odom_raw" />
      <param name="ekf_topic" value="/cabot/robot_pose_ekf/odom_combined" />
      <param name="odom2_topic" value="/cabot/odom" />

      <!-- cabot imu has to be fixed -->
      <param name="imu_input" value="/cabot/imu"/>
      <param name="imu_output" value="/cabot/imu_fixed"/>  
    </node>
  
    <!--
	combine /odom_raw and /imu_fixed to publish /odom and tf
	with robot pose ekf
    -->
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
      <param name="output_frame" value="odom"/>
      <param name="freq" value="100.0"/>
      <param name="sensor_timeout" value="1.0"/>
      <param name="odom_used" value="true"/>
      <param name="imu_used" value="true"/>
      <param name="vo_used" value="false"/>
      <param name="debug" value="true"/>
      <param name="self_diagnose" value="false"/>
      
      <remap from="odom" to="/cabot/odom_raw"/>
      <remap from="imu_data" to="/cabot/imu_fixed"/>
      <!--remap from="robot_pose_ekf/odom_combined" to="odom"/-->
    </node>
    
    <!-- velocity commands multiplexer -->
    <!--
	<node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
	<param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
	<remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
	</node>
	-->
  </group>
    <node pkg="urg_node" type="urg_node" name="scan">
      <param name="ip_address" value="192.168.0.10"/>
      <param name="frame_id" value="hokuyo_link" />
      <param name="angle_min" value="-2.2"/>
      <param name="angle_max" value="1.57"/>
    </node>

</launch>
