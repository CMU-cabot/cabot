<!--
 Copyright (c) 2020  Carnegie Mellon University

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
-->

<launch>
  <arg name="output" default="screen"/>
  <arg name="offset" default="0"/>
  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find cabot_description)/robots/cabot-e_zed_hokuyo.urdf.xacro' offset:=$(arg offset)" />
  <arg name="use_xsens" default="false"/>
  
  <param name="robot_description" command="$(arg urdf_file)" />
  
  <!-- important generally, but specifically utilised by the current app manager -->
  <param name="robot/name" value="$(optenv ROBOT cabot-e)"/>
  <param name="robot/type" value="cabot-e"/>
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="5.0" />
  </node>
  
  <node pkg="urg_node" type="urg_node" name="scan" ns="hokuyo">
    <param name="ip_address" value="192.168.0.10"/>
    <param name="frame_id" value="hokuyo_link" />
    <param name="angle_min" value="-1.2"/>
    <param name="angle_max" value="1.57"/>
  </node>
  
  <node pkg="laser_filters" type="scan_to_scan_filter_chain"
	output="screen" name="laser_filter">
    <rosparam command="load" file="$(find cabot)/config/range_filter.yaml" />
    <remap from="/scan" to="/hokuyo/scan" />      
    <remap from="/scan_filtered" to="/scan" />      
  </node>

  
  <group ns="cabot">
    <node pkg="nodelet" type="nodelet" output="$(arg output)" name="cabot_nodelet_manager"
	  args="manager"/>

    <node pkg="nodelet" type="nodelet" output="$(arg output)" name="clearing_tf_nodelet"
	  args="load Safety/ClearingTFNodelet cabot_nodelet_manager">
      <param name="target_rate" value="20"/>
    </node>
    
    <!-- visualize speed -->
    <node pkg="nodelet" type="nodelet" output="$(arg output)" name="speed_visualize_nodelet"
	  args="load CaBot/SpeedVisualizeNodelet cabot_nodelet_manager">
      <param name="cmd_vel_topic" value="/cabot/cmd_vel"/>
      <param name="visualize_topic" value="/cabot/poi"/>
    </node>
    
    <!-- Cabot Odometry Adapter -->
    <node pkg="nodelet" type="nodelet" output="$(arg output)" name="odom_adapter_nodelet"
	  args="load Safety/OdomAdapterNodelet cabot_nodelet_manager">
      <param name="offset" value="$(arg offset)"/>
      <param name="odom_input" value="/cabot/odometry/filtered"/>
      <param name="odom_output" value="/cabot/odom"/>
      <param name="odom_frame" value="odom"/>
      <param name="base_frame" value="base_footprint"/>
      
      <param name="cmd_vel_input" value="/cabot/raw_cmd_vel"/>
      <param name="cmd_vel_output" value="/cabot/cmd_vel_adapter"/>
      
      <param name="offset" value="$(arg offset)"/>
      <param name="target_rate" value="20"/>
      <param name="bias" value="0.130"/>
    </node>
    
    <!-- Cabot Speed Control -->
    <node pkg="nodelet" type="nodelet" output="$(arg output)" name="speed_control_nodelet"
	  args="load Safety/SpeedControlNodelet cabot_nodelet_manager">
      <param name="cmd_vel_input" type="string" value="/cabot/cmd_vel_adapter" />
      <param name="cmd_vel_output" type="string" value="/cabot/cmd_vel" />
      
      <param name="user_speed_input" value="/cabot/user_speed"/>
      <param name="map_speed_input" value="/cabot/map_speed"/>
    </node>
    
    
    <!-- Cabot-E specific sensors -->
    <!-- old 
	 <node pkg="cabot" type="cabot_serial.py" name="rosserial" output="log">
	 <param name="port" value="/dev/ttyVIB1"/>
	 <param name="baud" value="57600"/>
	 </node>
    -->
    <group if="$(arg use_xsens)">
      <node pkg="cabot" type="cabot_serial.py" name="rosserial" output="log">
	<param name="port" value="/dev/ttyARDUINO_MEGA"/>
	<param name="baud" value="500000"/>
      </node>
    </group>
    <group unless="$(arg use_xsens)">
      <node pkg="cabot" type="cabot_serial.py" name="rosserial" output="log">
	<param name="port" value="/dev/ttyARDUINO_MEGA"/>
	<param name="baud" value="500000"/>
	
	<remap from="/cabot/imu" to="/cabot/imu/data" />
      </node>
    </group>
    
    <node pkg="nodelet" type="nodelet" output="$(arg output)" name="cabot_e_sensor"
	  args="load CaBot/CaBotESensorNodelet cabot_nodelet_manager">
      <param name="sensor_topic" type="string" value="/cabot/wrench" />
      <param name="event_topic" type="string" value="/cabot/event" />
    </node>

    <node pkg="cabot_ui" type="cabot_force.py" name="cabot_force" output="screen">
    </node>
    
    <!-- For Cabot-E IMU
    <node pkg="imu_complementary_filter" type="complementary_filter_node" name="imu_filter">
    <param name="publish_debug_topics" value="true"/>
    </node>
    -->
    <group if="$(arg use_xsens)">
      <node name="xsens_mti_node" pkg="xsens_mti_driver" type="xsens_mti_node" output="screen">
	<rosparam command="load" file="$(find cabot)/config/xsens_mti_node.yaml" />
	<!-- need to fix -->
	<remap from="/imu/data" to="/cabot/imu/data"/>
      </node>
    </group>
      
    <!-- Cabot-E Motor Controller (ODrive) -->
    <node pkg="odriver" type="odriver_node.py" name="odriver_node" output="screen">
      <remap from="/motorTarget" to="/cabot/motorTarget" />
      <remap from="/motorStatus" to="/cabot/motorStatus" />
    </node>
    
    <node pkg="nodelet" type="nodelet" output="$(arg output)" name="odriver_adapter_node"
	  args="load MotorAdapter/ODriverNodelet cabot_nodelet_manager">
      <param name="encoder_topic" type="string" value="/cabot/motorStatus" />
      <param name="odom_topic" type="string" value="/cabot/odom_raw" />
      
      <param name="motor_topic" type="string" value="/cabot/motorTarget" />
      <param name="cmd_vel_topic" type="string" value="/cabot/cmd_vel" />

      <param name="max_acc" value="0.6"/>
      <param name="target_rate" value="20"/>
      <param name="bias" value="0.130"/>
      <param name="wheel_diameter" value="0.083"/>
      <param name="count_per_rotate" value="84" />
    </node>


    <!-- sensor fusion -->
    <node pkg="nodelet" type="nodelet" output="$(arg output)" name="ekf_nodelet"
	  args="load RobotLocalization/EkfNodelet cabot_nodelet_manager">
      <param name="frequency" value="100"/>
      <param name="sensor_timeout" value="0.1"/>
      <param name="two_d_mode" value="true"/>

      <param name="odom_frame" value="odom"/>
      <param name="base_link_frame" value="base_footprint"/>
      <param name="world_frame" value="odom"/>

      <rosparam param="initial_state" subst_value="true">[0.0, 0.0, 0.0,
      0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,
      0.0,  0.0,  0.0,
      0.0,  0.0,  0.0]</rosparam>

      <!-- Wheel odometry -->
      <param name="odom0" value="/cabot/odom_raw"/>
      <rosparam param="odom0_config">[true,  true,  false,
      false, false, false,
      false, false, false,
      false, false, false,
      false, false, false]</rosparam>
      <param name="odom0_queue_size" value="100"/>
      <param name="odom0_differential" value="true"/>

      <!-- Lidar odometry -->
      <param name="odom1" value="/cabot/odom_hector"/>
      <rosparam param="odom1_config">[true,  true,  false,
      false, false, false,
      false, false, false,
      false, false, false,
      false, false, false]</rosparam>
      <param name="odom1_queue_size" value="100"/>
      <param name="odom1_differential" value="true"/>

      <!-- IMU -->
      <param name="imu0" value="/cabot/imu/data"/>
      <rosparam param="imu0_config">[false, false, false,
      true, true,  true,
      false, false, false,
      true, true, true,
      false, false, false]</rosparam>
      <param name="imu0_queue_size" value="100"/>
      <param name="imu0_differential" value="false"/>
      <param name="imu0_relative" value="true"/>

      <param name="imu0_remove_gravitational_acceleration" value="true"/>

      <param name="print_diagnostics" value="true"/>
      <param name="publish_tf" value="false"/>
    </node>

    <!-- for odomerty during lifted up -->
    <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="$(arg output)">

      <!-- avoid conflict with map server for amcl -->
      <param name="pub_odometry" value="true" />

      <!-- Frame names -->
      <param name="map_size" value="8192" />
      <param name="base_frame" value="base_link" />
      <param name="odom_frame" value="odom" />
      <param name="map_frame" value="map" />

      <!-- Tf use -->
      <param name="use_tf_scan_transformation" value="true"/>
      <param name="use_tf_pose_start_estimate" value="false"/>
      <param name="pub_map_odom_transform" value="false"/>
      <param name="pub_map_scanmatch_transform" value="false"/>

      <!-- Map size / start point -->
      <param name="map_resolution" value="0.050"/>
      <param name="map_start_x" value="0.5"/>
      <param name="map_start_y" value="0.5" />
      <param name="map_multi_res_levels" value="2" />

      <!-- Map update parameters -->
      <param name="update_factor_free" value="0.4"/>
      <param name="update_factor_occupied" value="0.9" />
      <param name="map_update_distance_thresh" value="0.4"/>
      <param name="map_update_angle_thresh" value="0.9" />
      <param name="laser_z_min_value" value = "-1.0" />
      <param name="laser_z_max_value" value = "1.0" />
      <param name="laser_max_dist" value="20.0" />

      <!-- Advertising config -->
      <param name="advertise_map_service" value="false"/>

      <param name="scan_subscriber_queue_size" value="20"/>
      <param name="scan_topic" value="/scan"/>

      <!-- Debug parameters -->
      <!--
	  <param name="output_timing" value="false"/>
	  <param name="pub_drawings" value="true"/>
	  <param name="pub_debug_output" value="true"/>
      -->

      <remap from="/cabot/scanmatch_odom" to="/cabot/odom_hector"/>
    </node>

  </group>
</launch>
