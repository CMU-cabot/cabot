<!--
 Copyright (c) 2021  IBM Corporation

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
-->

<launch>
  <arg name="robot" default="megarover"/>
  <arg name="record_bag" default="true"/>
  <arg name="prefix" default="sensor"/>

  <arg name="scan" default="velodyne_scan"/>
  <arg name="bag_filename" default=""/>
  <arg name="load_state_filename"/> <!-- required -->
  <arg name="record_required" default="false"/>

  <arg name="debug_without_mf_localization" default="true" />
  <arg name="debug_queue_annotation_map_frame" default="map_carto4" />
  <node if="$(arg debug_without_mf_localization)" pkg="tf" type="static_transform_publisher" name="debug_queue_annotation_map_frame_link_publisher" 
        args="0 0 0 0 0 0 map $(arg debug_queue_annotation_map_frame) 100" />

  <param name="/use_sim_time" value="true" />

  <arg name="configuration_basename" value="megarover_2d_cartographer_localization.lua"/>
  <arg name="save_state_filename" default=""/>
  <arg name="start_trajectory_with_default_topics" default="true"/>
  <!-- update args based on args -->
  <arg name="record_option" default="-a " unless="$(arg record_required)"/>
  <arg name="record_option" default="-a -x '/map|/velodyne_points|(.*)/image_raw|(.*)/image_raw/(.*)'" if="$(arg record_required)"/>

  <!-- VLP-16 and Xsens IMU -->
  <include file="$(find mf_localization_mapping)/launch/includes/xsens_driver_cartographer.launch" />
  <include file="$(find mf_localization_mapping)/launch/includes/VLP16_points_cartographer.launch">
    <arg name="scan" value="$(arg scan)"/>
  </include>

  <!-- record -->
  <node if="$(eval bag_filename=='' and record_bag)" pkg="rosbag" type="record" name="record_all"
        args="$(arg record_option) -b 0 -o $(env HOME)/recordings/$(arg prefix)" output="screen"/>
  <node if="$(eval bag_filename!='' and record_bag)" pkg="rosbag" type="record" name="record_all"
        args="$(arg record_option) -b 0 -O $(arg bag_filename)"  output="screen"/>

  <!-- play -->
  <node pkg="rosbag" type="play" name="rosbag_play" args="$(arg play_bag_filename) /velodyne_packets:=/velodyne_packets_tmp --pause --clock --rate 0.3" />

  <!-- detect people -->
  <include file="$(find track_people_py)/launch/detect_darknet_realsense.launch">
    <arg name="map_frame" value="map"/>
    <arg name="camera_link_frame" value="base_link"/>
  </include>

  <!-- track people -->
  <include file="$(find track_people_py)/launch/track_sort_3d.launch" />

  <!-- predict people -->
  <include file="$(find predict_people_py)/launch/predict_kf.launch" />
  
  <!-- detect queue people -->
  <include file="$(find queue_people_py)/launch/detect_queue_people.launch">
    <arg name="debug_without_mf_localization" value="$(arg debug_without_mf_localization)"/>
    <arg name="debug_queue_annotation_map_frame" value="$(arg debug_queue_annotation_map_frame)"/>
  </include>
  
  <!-- cartographer -->
  <include file="$(find mf_localization_mapping)/launch/cartographer_2d_VLP16.launch">
    <arg name="robot" value="$(arg robot)"/>
    <arg name="scan" value="$(arg scan)"/>
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
    <arg name="load_state_filename" value="$(arg load_state_filename)"/>
    <arg name="save_state_filename" value="$(arg save_state_filename)"/>
    <arg name="start_trajectory_with_default_topics" value="$(arg start_trajectory_with_default_topics)"/>
  </include>


  <!-- Rviz -->
  <node name="rviz" pkg="rviz" type="rviz" required="true"
      args="-d $(find cartographer_ros)/configuration_files/demo_2d.rviz" />
</launch>
