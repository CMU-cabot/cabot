# Copyright (c) 2020, 2021  Carnegie Mellon University, IBM Corporation, and others
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

version: "2.3"

services:
  ros2:
    build:
      context: ./docker/ros2
    environment:
      - DISPLAY
      - XAUTHORITY=/tmp/.docker.xauth
      - NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,video,display
      - NVIDIA_VISIBLE_DEVICES=all
      - ROS_LOG_DIR
# CaBot
      - CABOT_GAZEBO=${CABOT_GAZEBO:-1}
      - CABOT_TOUCH_ENABLED=${CABOT_TOUCH_ENABLED:-true}
      - CABOT_MODEL
      - CABOT_SIDE
      - CABOT_SITE
      - CABOT_LANG
      - CABOT_OFFSET
      - CABOT_TOUCH_PARAMS
      - CABOT_ANNOUNCE_NO_TOUCH
      - CABOT_INIT_SPEED
      - CABOT_GAMEPAD
      - CABOT_USE_HANDLE_SIMULATOR=${CABOT_USE_HANDLE_SIMULATOR:-0}
      - CABOT_ODRIVER_SERIAL_0
      - CABOT_ODRIVER_SERIAL_1
      - CABOT_REMOTE_USE_KEYBOARD
      - CABOT_REMOTE_USE_IMU
      - CABOT_SHOW_GAZEBO_CLIENT
      - CABOT_SHOW_ROBOT_MONITOR
      - CABOT_SHOW_ROS2_RVIZ=${CABOT_SHOW_ROS2_RVIZ:-1}
      - CABOT_SHOW_ROS2_LOCAL_RVIZ
      - CABOT_FOOTPRINT_RADIUS
      - CABOT_INITX
      - CABOT_INITY
      - CABOT_INITZ
      - CABOT_INITA
      - RMW_IMPLEMENTATION
      - CYCLONEDDS_URI
      - ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY:-false}
    volumes:
# device, bluetooth
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /var/lib/bluetooth:/var/lib/bluetooth
      - /run/dbus:/run/dbus
      - /var/run/dbus:/var/run/dbus
# display
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth
# bridge - if DDS use shared memory
      - /dev/shm:/dev/shm
# code
      - ./docker/home:/home/developer/
      - ./cabot:/home/developer/ros2_ws/src/cabot
      - ./cabot_debug:/home/developer/ros2_ws/src/cabot_debug
      - ./cabot_bt:/home/developer/ros2_ws/src/cabot_bt
      - ./cabot_description:/home/developer/ros2_ws/src/cabot_description
      - ./cabot_gazebo:/home/developer/ros2_ws/src/cabot_gazebo
      - ./cabot_navigation2:/home/developer/ros2_ws/src/cabot_navigation2
      - ./cabot_common:/home/developer/ros2_ws/src/cabot_common
      - ./cabot_sites:/home/developer/ros2_ws/src/cabot_sites
      - ./cabot_msgs:/home/developer/ros2_ws/src/cabot_msgs
      - ./mf_localization_msgs:/home/developer/ros2_ws/src/mf_localization_msgs
      - ./mf_localization_rviz:/home/developer/ros2_ws/src/mf_localization_rviz
      - ./script:/home/developer/ros2_ws/script
      - ./queue_msgs:/home/developer/ros2_ws/src/queue_msgs
      - ./wireless_scanner_ros:/home/developer/ros2_ws/src/wireless_scanner_ros
      - ./motor_controller:/home/developer/ros2_ws/src/motor_controller
      - ./cabot_ui:/home/developer/ros2_ws/src/cabot_ui
    privileged: true
    devices:
      - /dev/dri
    network_mode: host
# display
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    command:
      - "/launch.sh"
      # - "/launch-core.sh"   # use core dump
      - "-c"                  # use built cache
    stop_signal: SIGINT
    stop_grace_period: 30s


  localization:
    build:
      context: ./docker/localization
    environment:
      - DISPLAY
      - XAUTHORITY=/tmp/.docker.xauth
      - NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,video,display
      - NVIDIA_VISIBLE_DEVICES=all
      - ROS_IP=${ROS_IP:-127.0.0.1}
      - ROS_MASTER_URI=http://${MASTER_IP:-127.0.0.1}:11311
      - ROS_LOG_DIR
# CaBot
      - CABOT_GAZEBO=${CABOT_GAZEBO:-1}
      - CABOT_PRESSURE_AVAILABLE=${CABOT_PRESSURE_AVAILABLE:-0}
      - CABOT_USE_GNSS=${CABOT_USE_GNSS:-0}
      - CABOT_MODEL
      - CABOT_SITE
      - CABOT_SHOW_LOC_RVIZ=${CABOT_SHOW_LOC_RVIZ:-1}
      - RMW_IMPLEMENTATION
      - CYCLONEDDS_URI
    volumes:
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /var/lib/bluetooth:/var/lib/bluetooth
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth
      - ./docker/home:/home/developer
      - ./cabot_description:/home/developer/loc_ws/src/cabot_description
      - ./cabot_common:/home/developer/loc_ws/src/cabot_common
      - ./cabot_msgs:/home/developer/loc_ws/src/cabot_msgs
      - ./cabot_mf_localization:/home/developer/loc_ws/src/cabot_mf_localization
      - ./mf_localization:/home/developer/loc_ws/src/mf_localization
      - ./mf_localization_gazebo:/home/developer/loc_ws/src/mf_localization_gazebo
      - ./mf_localization_msgs:/home/developer/loc_ws/src/mf_localization_msgs
      - ./mf_localization_rviz:/home/developer/loc_ws/src/mf_localization_rviz
      - ./cabot_sites:/home/developer/loc_ws/src/cabot_sites
# bridge - if DDS use shared memory
      - /dev/shm:/dev/shm
    privileged: true
    devices:
      - /dev/dri
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    network_mode: host
    command:
      - "/launch.sh"
      - "localization"
      - "-M"                                # start multifloor map server
      - "-R 1"                              # set publish_current_rate to 1hz
      # - "-C"                                # launch cvi client
      # - "-N"                                # start ROS1 navigation for development
    stop_signal: SIGINT
    stop_grace_period: 30s

  people-base:
    build:
      context: ./docker/people
    environment:
      - DISPLAY
      - XAUTHORITY=/tmp/.docker.xauth
      - NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,video,display
      - NVIDIA_VISIBLE_DEVICES=all
      - ROS_IP=${ROS_IP:-127.0.0.1}
      - GAZEBO_IP=${ROS_IP:-127.0.0.1}
      - ROS_MASTER_URI=http://${MASTER_IP:-127.0.0.1}:11311
      - GAZEBO_MASTER_URI=http://${MASTER_IP:-127.0.0.1}:11345
      - OMP_NUM_THREADS=1
      - ROS_LOG_DIR
# CaBot
      - CABOT_GAZEBO=${CABOT_GAZEBO:-1}
      - CABOT_SITE
      - CABOT_SHOW_PEOPLE_RVIZ=${CABOT_SHOW_PEOPLE_RVIZ:-0}
      - CABOT_USE_REALSENSE=${CABOT_USE_REALSENSE:-0}
      - CABOT_REALSENSE_SERIAL
      - CABOT_CAMERA_NAME
      - CABOT_CAMERA_RGB_FPS
      - CABOT_CAMERA_DEPTH_FPS
      - CABOT_CAMERA_RESOLUTION
      - CABOT_DETECT_VERSION=${CABOT_DETECT_VERSION:-3}
      - RMW_IMPLEMENTATION
      - CYCLONEDDS_URI
    volumes:
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth
      - ./docker/home:/home/developer
    privileged: true
    devices:
      - /dev/dri
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    network_mode: host
    stop_signal: SIGINT
    stop_grace_period: 30s


  people:
    extends:
      service: people-base
    volumes:
      - ./cabot_sites:/home/developer/people_ws/src/cabot_sites
      - ./mf_localization_msgs:/home/developer/people_ws/src/mf_localization_msgs
      - ./cabot_common:/home/developer/people_ws/src/cabot_common
      - ./cabot_msgs:/home/developer/people_ws/src/cabot_msgs
      - ./cabot_people:/home/developer/people_ws/src/cabot_people
      - ./queue_people_py:/home/developer/people_ws/src/queue_people_py
      - ./queue_utils_py:/home/developer/people_ws/src/queue_utils_py
      - ./queue_msgs:/home/developer/people_ws/src/queue_msgs
      - ./track_people_py:/home/developer/people_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_ws/src/track_people_cpp
    command:
      - "/launch.sh"
      # - "/launch-core.sh"                 # use core dump
      - "-W"                                # wait roscore
      # - "-p"                                # people topic is simulation groundtruth
      - "-D"                                # detection
      - "-K"                                # tracking
      - "-q"                                # queue
      - "-O"                                # obstacle


  people-nuc:
    extends:
      service: people-base
    build:
      context: ./docker/people
      dockerfile: Dockerfile.nuc
    volumes:
      - ./cabot_common:/home/developer/people_nuc_ws/src/cabot_common
      - ./cabot_msgs:/home/developer/people_nuc_ws/src/cabot_msgs
      - ./cabot_sites:/home/developer/people_nuc_ws/src/cabot_sites
      - ./mf_localization_msgs:/home/developer/people_nuc_ws/src/mf_localization_msgs
      - ./cabot_people:/home/developer/people_nuc_ws/src/cabot_people
      - ./queue_people_py:/home/developer/people_nuc_ws/src/queue_people_py
      - ./queue_utils_py:/home/developer/people_nuc_ws/src/queue_utils_py
      - ./queue_msgs:/home/developer/people_nuc_ws/src/queue_msgs
      - ./track_people_py:/home/developer/people_nuc_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_nuc_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_nuc_ws/src/track_people_cpp
    command:
      - "/launch.sh"
      - "-W"                                # wait roscore
      - "-K"                                # tracking
      - "-q"                                # queue
      - "-O"                                # obstacle


  people-detection:
    extends:
      service: people
    command:
      - "/launch.sh"
      # - "/launch-core.sh"   # use core dump
      - "-W"                                # wait roscore
      # - "-p"                                # people topic is simulation groundtruth
      - "-D"                                # detection
      - "-a"                                # no resetrs individually

  wifi_scan:
    build:
      context: ./wireless_scanner_ros
    environment:
      - ROS_LOG_DIR
    volumes:
      - /dev:/dev
      - /sys/devices:/sys/devices
      - ./docker/home/.ros/log:/home/developer/.ros/log
# bridge - if DDS use shared memory
      - /dev/shm:/dev/shm
    privileged: true
    devices:
      - /dev/dri
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    network_mode: host
    stop_signal: SIGINT
    command: ros2 launch wireless_scanner_ros esp32.launch.xml

  ble_scan:
    build:
      context: ./wireless_scanner_ros
    environment:
      - ROS_LOG_DIR
    volumes:
# device, bluetooth
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /sys/class/bluetooth:/sys/class/bluetooth
      - /run/dbus:/run/dbus
      - /var/run/dbus:/var/run/dbus
      - /var/lib/bluetooth:/var/lib/bluetooth
      - ./docker/home/.ros/log:/home/developer/.ros/log
# bridge - if DDS use shared memory
      - /dev/shm:/dev/shm
    privileged: true
    devices:
      - /dev/dri
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    network_mode: host
    stop_signal: SIGINT
    command: ros2 launch wireless_scanner_ros dbus_ibeacon_scanner.launch.xml
