<!--
 Copyright (c) 2021  IBM Corporation

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
-->

<launch>
  <arg name="robot" default="rover"/>
  <arg name="run_cartographer" default="true"/>
  <arg name="record_bag" default="true"/>
  <arg name="prefix" default="sensor"/>

  <arg name="scan" default="velodyne_scan"/>
  <arg name="save_samples" default="false"/>
  <arg name="wireless_topics" default="['/wireless/beacons','/wireless/wifi']"/>

  <arg name="bag_filename" default=""/>
  <arg name="load_state_filename" default=""/>
  <arg name="record_required" default="false"/>

  <arg name="configuration_basename" value="cartographer_2d_mapping.lua"/>
  <arg name="save_state_filename" value="" if="$(eval bag_filename=='')"/>
  <arg name="save_state_filename" value="$(arg bag_filename).pbstream" unless="$(eval bag_filename=='')"/>
  <arg name="start_trajectory_with_default_topics" default="$(eval load_state_filename=='')"/>

  <arg name="record_wireless" default="false"/>
  
  <!-- update args based on args -->
  <arg name="record_option" default="-a " unless="$(arg record_required)"/>
  <arg name="record_option" default="-a -x '/map|/velodyne_points|(.*)/image_raw|(.*)/image_raw/(.*)'" if="$(arg record_required)"/>

  <arg name="use_xsens" default="true"/>

  <!-- VLP-16 and Xsens IMU -->
  <include file="$(find mf_localization_mapping)/launch/includes/xsens_driver_cartographer.launch" if="$(arg use_xsens)"/>
  <include file="$(find mf_localization_mapping)/launch/includes/VLP16_points_cartographer.launch">
    <arg name="scan" value="$(arg scan)"/>
  </include>

  <!-- run wireless receiver if required-->
  <!-- move to ble_scan 
  <include file="$(find wireless_scanner_ros)/launch/wifi_ble_receiver.launch" if="$(arg record_wireless)"/>
-->

  <!-- record -->
  <node if="$(eval bag_filename=='' and record_bag)" pkg="rosbag" type="record" name="record_all"
        args="$(arg record_option) -b 0 -o $(env HOME)/recordings/$(arg prefix)" output="screen"/>
  <node if="$(eval bag_filename!='' and record_bag)" pkg="rosbag" type="record" name="record_all"
        args="$(arg record_option) -b 0 -O $(arg bag_filename)"  output="screen"/>

  <!-- cartographer -->
  <include file="$(find mf_localization_mapping)/launch/cartographer_2d_VLP16.launch" if="$(arg run_cartographer)">
    <arg name="robot" value="$(arg robot)"/>
    <arg name="scan" value="$(arg scan)"/>
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
    <arg name="load_state_filename" value="$(arg load_state_filename)"/>
    <arg name="save_state_filename" value="$(arg save_state_filename)"/>
    <arg name="start_trajectory_with_default_topics" value="$(arg start_trajectory_with_default_topics)"/>
  </include>

  <!-- write samples json -->
  <node name="tf2_beacons_listener" pkg="mf_localization"
        type="tf2_beacons_listener.py" if="$(arg save_samples)">
    <param name="output" value="$(arg bag_filename).loc.samples.json" unless="$(eval bag_filename=='')"/>
    <param name="topics" value="$(arg wireless_topics)"/>
  </node>

  <!-- Rviz -->
  <node name="rviz" pkg="rviz" type="rviz" required="true"
      args="-d $(find cartographer_ros)/configuration_files/demo_2d.rviz" if="$(arg run_cartographer)"/>
</launch>
