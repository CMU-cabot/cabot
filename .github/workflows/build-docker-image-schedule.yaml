name: Build Docker Image Schedule

on:
  schedule:
    - cron: '0 0 * * *'

jobs:

  build-people:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        ref: "dev"

    - name: Install vcs
      run: pip3 install vcstool

    - name: Prepare thirdparty repos
      run: tools/setup-thirdparty-repos.sh

    - name: Prebuild images
      run: ./prebuild-docker.sh cuda

    - name: Build images
      shell: bash
      run: ./build-docker.sh people

    - name: Get short SHA
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

    - name: Upload Images
      shell: bash
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        SHORT_SHA: ${{ steps.vars.outputs.sha_short }}
      run: |
        docker login -u daisukesato80 -p "$DOCKERHUB_TOKEN"
        ./manage-docker-image.sh -a tag -i  people -o cmucal -t nightly
        ./manage-docker-image.sh -a push -i people -o cmucal -t nightly

  build-ros2:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        ref: "dev"

    - name: Install vcs
      run: pip3 install vcstool

    - name: Prepare thirdparty repos
      run: tools/setup-thirdparty-repos.sh

    - name: Prebuild images
      run: ./prebuild-docker.sh ros2

    - name: Build images (ros2 and localization)
      shell: bash
      run: ./build-docker.sh ros2 localization

    - name: Build images (people-nuc and wireless)
      shell: bash
      run: ./build-docker.sh people-nuc wireless

    - name: Get short SHA
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

    - name: Upload Images
      shell: bash
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        SHORT_SHA: ${{ steps.vars.outputs.sha_short }}
      run: |
        docker login -u daisukesato80 -p "$DOCKERHUB_TOKEN"
        ./manage-docker-image.sh -a tag -i  "ros2 localization" -o cmucal -t nightly
        ./manage-docker-image.sh -a tag -i  "people-nuc wireless" -o cmucal -t nightly
        ./manage-docker-image.sh -a push -i "ros2 localization" -o cmucal -t nightly
        ./manage-docker-image.sh -a push -i "people-nuc wireless" -o cmucal -t nightly
