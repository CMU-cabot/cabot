<!-- 
Copyright (c) 2019, 2022  Carnegie Mellon University
 
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
 
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
 
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. 
-->

<launch>
  <arg name="use_keyboard" default="false"/>
  <arg name="use_joy" default="false"/>
  <arg name="use_imu" default="false"/>
  
  <arg name="max_acc" default="1.0"/>
  <arg name="target_rate" default="20"/>
  <arg name="bias" default="0.258"/>
  <arg name="gain_omega" default="2.0"/>
  <arg name="gain_omega_i" default="0.0"/>

  <arg name="wheel_diameter" default="0.073"/>
  <arg name="count_per_round" default="8192"/>
  <arg name="left_is_1" default="false"/>
  <arg name="gain_left" default="1.0"/>
  <arg name="gain_right" default="1.0"/>
  
  <arg name="vel_gain" default="1.0" />
  <arg name="vel_integrator_gain" default="10.0" />
  <arg name="encoder_bandwidth" default="200" />
  <arg name="motor_bandwidth" default="200" />
  
  <arg name="joy_dev" default="/dev/input/js0" />
  <arg name="config_filepath" default="$(find-pkg-share motor_adapter)/config/gamepad.config.yaml" />

  <!--
  <node pkg="nodelet" type="nodelet" output="screen" name="cabot_nodelet_manager"
	args="manager"/>
  -->

  <!-- TODO if="$(arg use_imu)"-->
  <executable cmd="ros2
	           component standalone motor_adapter MotorAdapter::ODriverNode
		    -p encoder_topic:=/motorStatus
		    -p odom_topic:=/odom
		    -p motor_topic:=/motorTarget
		    -p cmd_vel_topic:=/cmd_vel
		    -p max_acc:=$(var max_acc)
		    -p target_rate:=$(var target_rate)
		    -p bias:=$(var bias)
		    -p gain_omega:=$(var gain_omega)
		    -p gain_omega_i:=$(var gain_omega_i)">
  </executable>
	  
  <node pkg="odriver" exec="odriver_node" name="odriver_node" output="screen">
    <param name="port" value="/dev/ttyODRIVE" />

    <param name="wheel_diameter" value="$(var wheel_diameter)" />
    <param name="count_per_round" value="$(var count_per_round)" />
    <param name="left_is_1" value="$(var left_is_1)" />

     <!-- adjust motor speed -->
    <param name="gain_left" value="$(var gain_left)" />
    <param name="gain_right" value="$(var gain_right)" />

    <!-- adjust motor control config -->
    <param name="vel_gain" value="$(var vel_gain)" />
    <param name="vel_integrator_gain" value="$(var vel_integrator_gain)" />
    <param name="encoder_bandwidth" value="$(var encoder_bandwidth)" />
    <param name="motor_bandwidth" value="$(var motor_bandwidth)" />
    
    <remap from="/motorTarget" to="/motorTarget" />
    <remap from="/motorStatus" to="/motorStatus" />
  </node>

  <group if="$(var use_joy)">
    <node pkg="joy" exec="joy_node" name="joy_node">
      <param name="dev" value="$(var joy_dev)" />
      <param name="deadzone" value="0.3" />
      <param name="autorepeat_rate" value="20" />
    </node>
    <node pkg="teleop_twist_joy" name="teleop_twist_joy" exec="teleop_node">
      <param from="$(var config_filepath)" />
    </node>
  </group>

  <group if="$(var use_keyboard)">
    <node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard"
	  name="teleop_keyboard" output="screen">
    </node>
  </group>

  <group if="$(var use_imu)">
    <node pkg="cabot" exec="cabot_serial.py" name="rosserial" output="log">
      <param name="port" value="/dev/ttyARDUINO_MEGA"/>
      <param name="baud" value="115200"/>
    </node>
  </group>
</launch>
